Given a positive integer N, count all possible distinct binary strings of length N such that there are no consecutive 1â€™s. Output your answer modulo 10^9 + 7.

Example 1:

Input:
N = 3
Output: 5
Explanation: 5 strings are (000,
001, 010, 100, 101).
Example 2:

Input:
N = 2
Output: 3
Explanation: 3 strings are
(00,01,10).


eg: if n=1 --> o/p = 2
0
1
n=2 ---> o/p = 3

00
01
10
11
n=3 -->o/p = 3+2 = 5. f(n-1)+f(n-2)

000
001
010
011
o/p = 3
100
101
110
111
o/p = 2 

It is forming fibonacci series

class Solution {
    long countStrings(int n) {
          int[] dp = new int[n+1];
          dp[0]=1;
          dp[1]=2;
          int m = (int)Math.pow(10,9)+7;
          for(int i=2;i<=n;i++)
            dp[i] = (dp[i-1]+dp[i-2])%m;
        return dp[n];
        }

}


