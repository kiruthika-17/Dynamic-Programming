Src : https://leetcode.com/problems/longest-palindromic-subsequence/

class Solution {
    public int longestPalindromeSubseq(String s) {
        char[] ch = s.toCharArray();
        int[][] dp=new int[ch.length][ch.length];
        for(int i=0; i<ch.length; i++){
            dp[i][i] = 1;
        }
        
        for(int l=2;l<=ch.length;l++){
            for(int i=0;i<ch.length-l+1;i++){
                int j = i+l-1;
                if(l==2 && ch[i] == ch[j]){
                    dp[i][j] = 2;
                }else if(ch[i] == ch[j]){
                    dp[i][j] = 2+dp[i+1][j-1];
                }else{
                    dp[i][j] = Math.max(dp[i][j-1], dp[i+1][j]);
                }
            }
        }
        return dp[0][ch.length-1];
    }
}
