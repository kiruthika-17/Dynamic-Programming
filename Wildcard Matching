Src : https://leetcode.com/problems/wildcard-matching/

class Solution {
    public boolean isMatch(String s, String p) {
        
        char[] s1 = s.toCharArray();
        char[] p1 = p.toCharArray();
        
        int l = 0;
        boolean first = true;
        for(int i =0;i<p1.length;i++){
            if(p1[i] == '*'){
                if(first){
                    p1[l++] = p1[i];
                    first = false;
                }
            }else{
                p1[l++] = p1[i];
                first = true;
            }
        }
        boolean[][] dp= new boolean[s.length()+1][l+1];
        dp[0][0] = true;
        if(l > 0 && p1[0] == '*'){
            dp[0][1] = true;
        }
        for(int i=1; i <= dp.length-1; i++){
            for(int j=1; j <= dp[0].length-1; j++){
                if(s1[i-1] == p1[j-1] || p1[j-1] == '?'){
                    dp[i][j] = dp[i-1][j-1];
                }
                else if(p1[j-1] == '*'){
                    dp[i][j] = dp[i-1][j] || dp[i][j-1];
                }
                else{
                    dp[i][j] = false;
                }
            }
        }
        return dp[s.length()][l];
    }
}

