
An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.

For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.
Given an integer array nums, return the number of arithmetic subarrays of nums.

A subarray is a contiguous subsequence of the array.

Example 1:

Input: nums = [1,2,3,4]
Output: 3
Explanation: We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.
Example 2:

Input: nums = [1]
Output: 0



class Solution {
    public int numberOfArithmeticSlices(int[] nums) {    
        if(nums.length < 3)
            return 0;
        int s=0;
        int[] dp= new int[nums.length+1];
        dp[0]=dp[1]=0;
        for(int i=2;i<nums.length;i++){
            if(nums[i]-nums[i-1] == nums[i-1]-nums[i-2])
                dp[i] = dp[i-1]+1;
            else
                dp[i]=0;
            s+=dp[i];
        }
        return s;
    }
}

TC : O(n)
SC : O(n)



class Solution {
    public int numberOfArithmeticSlices(int[] nums) {
       int c=0, s=0;
        for(int i=2;i<nums.length;i++){
            if(nums[i]-nums[i-1] == nums[i-1]-nums[i-2])
            {
                c++;
                s=s+c;
            }else{
                c=0;
            }
        }
        return s;
    }
}

TC : O(n)
SC : O(1)


source : https://leetcode.com/problems/perfect-squares/ 
